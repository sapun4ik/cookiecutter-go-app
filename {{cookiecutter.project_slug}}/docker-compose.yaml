version: "3.9"

services:
  microservice:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: microservice
    restart: always
    ports:
      - "8000:8000"
      - "3001:3001"
      - "8001:8001"
    environment:
      - JAEGER_HOST_PORT=host.docker.internal:6831
      - APP_PROFILE=docker
    depends_on:
      - db_postgres
      - grafana
      - jaeger
      - node_exporter
      - prometheus
    networks: [ "microservices" ]

  jaeger:
    container_name: jaeger_container
    restart: always
    image: jaegertracing/all-in-one:1.35
    environment:
      - COLLECTOR_ZIPKIN_HTTP_PORT=9411
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14268:14268"
      - "14250:14250"
      - "9411:9411"
    networks: [ "microservices" ]

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    networks: [ "microservices" ]

  node_exporter:
    container_name: node_exporter_container
    restart: always
    image: prom/node-exporter
    ports:
      - '9101:9100'
    networks: [ "microservices" ]

  grafana:
    container_name: grafana_container
    restart: always
    image: grafana/grafana
    ports:
      - '3005:3000'
    networks: [ "microservices" ]

  db_postgres:
    container_name: postgres
    restart: always
    image: postgres
    environment:
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5439:5432'
    networks: [ "microservices" ]

volumes:
  es-data01:
    driver: local

networks:
  microservices:
    name: microservices
